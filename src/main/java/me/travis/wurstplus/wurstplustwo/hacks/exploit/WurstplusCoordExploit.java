package me.travis.wurstplus.wurstplustwo.hacks.exploit;

import java.io.File;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.io.Writer;
import java.util.HashMap;
import java.util.List;
import me.travis.wurstplus.wurstplustwo.hacks.WurstplusCategory;
import me.travis.wurstplus.wurstplustwo.hacks.WurstplusHack;
import me.travis.wurstplus.wurstplustwo.util.WurstplusMessageUtil;
import net.minecraft.client.Minecraft;
import net.minecraft.client.entity.EntityPlayerSP;
import net.minecraft.client.multiplayer.WorldClient;
import net.minecraft.entity.Entity;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.util.math.Vec3d;

public class WurstplusCoordExploit
extends WurstplusHack {
    private HashMap<Entity, Vec3d> knownPlayers = new HashMap();
    private HashMap<String, Vec3d> tpdPlayers = new HashMap();
    private int numTicks = 0;
    private int numForgetTicks = 0;

    public WurstplusCoordExploit() {
        super(WurstplusCategory.WURSTPLUS_EXPLOIT);
        this.name = "Coord Exploit";
        this.tag = "CoordExploit";
        this.description = "find someone's coords";
    }

    public void update() {
        if (this.numTicks >= 50) {
            this.numTicks = 0;
            for (Entity entity : WurstplusCoordExploit.mc.field_71441_e.field_72996_f) {
                if (!(entity instanceof EntityPlayer) || entity.func_70005_c_().equals((Object)WurstplusCoordExploit.mc.field_71439_g.func_70005_c_())) continue;
                Vec3d playerPos = new Vec3d(entity.field_70165_t, entity.field_70163_u, entity.field_70161_v);
                if (this.knownPlayers.containsKey((Object)entity) && Math.abs((double)((Vec3d)this.knownPlayers.get((Object)entity)).func_72438_d(playerPos)) > 50.0 && Math.abs((double)WurstplusCoordExploit.mc.field_71439_g.func_174791_d().func_72438_d(playerPos)) > 100.0 && (!this.tpdPlayers.containsKey((Object)entity.func_70005_c_()) || this.tpdPlayers.get((Object)entity.func_70005_c_()) != playerPos)) {
                    WurstplusMessageUtil.send_client_message((String)("Player " + entity.func_70005_c_() + " has tp'd to " + WurstplusCoordExploit.vectorToString(playerPos, false)));
                    this.saveFile(WurstplusCoordExploit.vectorToString(playerPos, false), entity.func_70005_c_());
                    this.knownPlayers.remove((Object)entity);
                    this.tpdPlayers.put((Object)entity.func_70005_c_(), (Object)playerPos);
                }
                this.knownPlayers.put((Object)entity, (Object)playerPos);
            }
        }
        if (this.numForgetTicks >= 9000000) {
            this.tpdPlayers.clear();
        }
        ++this.numTicks;
        ++this.numForgetTicks;
    }

    public static String vectorToString(Vec3d vector, boolean includeY) {
        StringBuilder builder = new StringBuilder();
        builder.append('(');
        builder.append((int)Math.floor((double)vector.field_72450_a));
        builder.append(", ");
        if (includeY) {
            builder.append((int)Math.floor((double)vector.field_72448_b));
            builder.append(", ");
        }
        builder.append((int)Math.floor((double)vector.field_72449_c));
        builder.append(")");
        return builder.toString();
    }

    public void saveFile(String pos, String name) {
        try {
            File file = new File("./Hope+/coordexploit.txt");
            file.getParentFile().mkdirs();
            PrintWriter writer = new PrintWriter((Writer)new FileWriter(file, true));
            writer.println("name: " + name + " coords: " + pos);
            writer.close();
        }
        catch (Exception file) {
            // empty catch block
        }
    }
}
